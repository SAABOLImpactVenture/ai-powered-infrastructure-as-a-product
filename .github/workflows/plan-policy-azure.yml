name: plan-policy-azure

on:
  pull_request:
    paths:
      - "products/azure/**"
      - ".github/workflows/plan-policy-azure.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ARM_USE_OIDC: "true"
  TF_IN_AUTOMATION: "1"

jobs:
  validate:
    uses: ./.github/workflows/_terraform-reusable.yml
    with:
      tf-globs: |
        products/azure/**/main.tf
    secrets: inherit

  plan:
    name: terraform plan (Azure)
    needs: validate
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.DEV_SUB_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Select TF root
        id: root
        run: |
          # Choose the first TF root under products/azure having a main.tf
          ROOT=$(git ls-files "products/azure/**/main.tf" | head -n1 | xargs -n1 dirname)
          if [ -z "$ROOT" ]; then
            echo "No Terraform roots found under products/azure; nothing to plan."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "root=$ROOT" >> $GITHUB_OUTPUT
          fi

      - name: Plan
        if: steps.root.outputs.skip != 'true'
        working-directory: ${{ steps.root.outputs.root }}
        env:
          ARM_USE_OIDC: "true"
        run: |
          terraform init -input=false -no-color
          terraform plan -out=tfplan -input=false -no-color

      - name: Upload plan as artifact (evidence)
        if: steps.root.outputs.skip != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.run_id }}
          path: ${{ steps.root.outputs.root }}/tfplan
          retention-days: 7
