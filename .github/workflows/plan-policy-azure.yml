name: plan-policy-azure

on:
  pull_request:
    paths:
      - "products/azure/**"
      - ".github/workflows/plan-policy-azure.yml"

permissions:
  id-token: write
  contents: read

env:
  # Backend (Mgmt subscription)
  RG_PLATFORM: rg-aiap-platform
  STATE_STORAGE_ACCOUNT: ${{ secrets.STATE_STORAGE_ACCOUNT }}
  STATE_CONTAINER: ${{ secrets.STATE_CONTAINER }}
  EVIDENCE_CONTAINER: ${{ secrets.EVIDENCE_CONTAINER }}

  # Terraform
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  TF_CLI_ARGS: "-no-color"
  TF_WORKDIR: products/azure/example  # <-- change if your TF lives elsewhere

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Detect Terraform
        id: detect
        run: |
          if compgen -G "${{ env.TF_WORKDIR }}/*.tf" > /dev/null; then
            echo "has_tf=true" >> $GITHUB_OUTPUT
          else
            echo "No Terraform files in ${{ env.TF_WORKDIR }} â€” skipping."
            echo "has_tf=false" >> $GITHUB_OUTPUT
          fi

      - name: Azure login (Mgmt for backend)
        if: steps.detect.outputs.has_tf == 'true'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.PLATFORM_SUB_ID }}

      - name: Setup Terraform
        if: steps.detect.outputs.has_tf == 'true'
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init (remote state in Mgmt via AAD/OIDC)
        if: steps.detect.outputs.has_tf == 'true'
        working-directory: ${{ env.TF_WORKDIR }}
        env:
          ARM_USE_OIDC: "true"
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.DEV_SUB_ID }}  # provider default; backend uses Mgmt through az login
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ env.RG_PLATFORM }}" \
            -backend-config="storage_account_name=${{ env.STATE_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ env.STATE_CONTAINER }}" \
            -backend-config="key=${{ github.repository }}-${{ github.ref_name }}.tfstate" \
            -backend-config="use_azuread_auth=true"

      - name: Switch context to DEV subscription
        if: steps.detect.outputs.has_tf == 'true'
        run: az account set --subscription "${{ secrets.DEV_SUB_ID }}"

      # ---- add tfsec/tflint/conftest here later (fail-closed) ----

      - name: Terraform validate
        if: steps.detect.outputs.has_tf == 'true'
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform validate

      - name: Terraform plan
        if: steps.detect.outputs.has_tf == 'true'
        id: plan
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform plan -out=tfplan.bin

      - name: Show plan (first 200 lines)
        if: steps.detect.outputs.has_tf == 'true'
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform show -no-color tfplan.bin | head -n 200

      - name: Upload plan artifact
        if: steps.detect.outputs.has_tf == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.run_id }}
          path: ${{ env.TF_WORKDIR }}/tfplan.bin
