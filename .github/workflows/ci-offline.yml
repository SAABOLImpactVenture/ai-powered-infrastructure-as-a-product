name: ci-offline

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  python-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Installs from requirements-dev.txt if present; else requirements.txt; else skips.
      - name: Install dependencies (dev â†’ default; else skip)
        run: |
          set -e
          if [ -f requirements-dev.txt ]; then
            echo "Installing from requirements-dev.txt"
            pip install -r requirements-dev.txt
          elif [ -f requirements.txt ]; then
            echo "Installing from requirements.txt"
            pip install -r requirements.txt
          else
            echo "No requirements file found; skipping dependency installation."
          fi

      # Run tests only if pytest is installed by the previous step.
      - name: Run tests (if pytest available)
        run: |
          python - <<'PY'
          import importlib, subprocess, sys
          if importlib.util.find_spec("pytest") is None:
              print("pytest not installed; skipping tests.")
              sys.exit(0)
          sys.exit(subprocess.call(["pytest", "-q"]))
          PY

      # Optional: lint only if flake8 is installed.
      - name: Lint (if flake8 available)
        run: |
          python - <<'PY'
          import importlib, subprocess, sys
          if importlib.util.find_spec("flake8") is None:
              print("flake8 not installed; skipping lint.")
              sys.exit(0)
          sys.exit(subprocess.call(["flake8", "."]))
          PY
