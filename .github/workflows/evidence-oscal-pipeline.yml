name: evidence-oscal-pipeline
on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  security-events: write

concurrency: ci-${{ github.workflow }}-${{ github.ref }}

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: 1.8.6 }
      - name: terraform init (read-only validate mode)
        run: |
          terraform init -backend=false -input=false
          terraform validate -no-color || true
      - name: terraform plan (json)
        run: |
          terraform init -input=false
          terraform plan -out=tfplan.bin -input=false -lock=false -detailed-exitcode || true
          terraform show -json tfplan.bin > tfplan.json
      - uses: actions/upload-artifact@v4
        with: { name: tfplan, path: tfplan.json }

  policy:
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - uses: actions/checkout@v4
      - name: Setup tflint
        uses: terraform-linters/setup-tflint@v4
        with: { tflint_version: v0.53.0 }
      - name: tflint
        run: |
          tflint --init
          tflint -f compact
      - name: Checkov (TF/K8s/Helm) SARIF
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          soft_fail: false
          framework: terraform,kubernetes,helm
          output_format: sarif
          output_file_path: checkov.sarif
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with: { sarif_file: checkov.sarif }
      - name: OPA on plan (deny on violations)
        run: |
          conftest test --policy policy/ tfplan.json
      - uses: actions/upload-artifact@v4
        with: { name: sarif, path: checkov.sarif }

  oscal:
    runs-on: ubuntu-latest
    needs: [plan, policy]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: { name: tfplan, path: . }
      - uses: actions/download-artifact@v4
        with: { name: sarif, path: . }
      - name: Build OSCAL assessment-results from SARIF + policy
        run: |
          python3 scripts/oscal/sarif_to_oscal.py             --repository "${{ github.repository }}"             --run-id "${{ github.run_id }}"             --sarif checkov.sarif             --plan tfplan.json             --out artifacts/oscal/assessment-results.json
      - uses: actions/upload-artifact@v4
        with: { name: oscal-results, path: artifacts/oscal/assessment-results.json }

  archive:
    runs-on: ubuntu-latest
    needs: oscal
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: { name: oscal-results, path: . }
      - name: Login to Azure (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Upload to immutable evidence store (blob immutability + CMK)
        env:
          STORAGE_ACCOUNT: ${{ secrets.EVIDENCE_SA }}
          CONTAINER: ${{ secrets.EVIDENCE_CONTAINER }}
        run: |
          set -e
          az storage blob upload             --account-name "$STORAGE_ACCOUNT"             --container-name "$CONTAINER"             --name "assessment-results/${{ github.run_id }}.json"             --file artifacts/oscal/assessment-results.json             --auth-mode login
          # Set time-based immutability policy (e.g., 365 days)
          az storage blob immutability-policy set             --account-name "$STORAGE_ACCOUNT"             --container-name "$CONTAINER"             --name "assessment-results/${{ github.run_id }}.json"             --period 365d --allow-protected-append-writes true
