name: deploy
on:
  workflow_dispatch:
    inputs:
      path:
        description: Terraform module path
        required: true
      environment:
        description: Environment (requires approvals for apply)
        required: true
        default: prod
permissions:
  contents: read
  id-token: write
concurrency: deploy-${{ github.ref }}

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: 1.8.6 }
      - name: terraform init
        working-directory: ${{ inputs.path }}
        run: terraform init -input=false
      - name: terraform plan
        working-directory: ${{ inputs.path }}
        run: terraform plan -out=tfplan.bin -input=false -lock=false -detailed-exitcode || exit_code=$?; echo "exit_code=${exit_code:-0}" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with: { name: tfplan, path: ${{ inputs.path }}/tfplan.bin }

  policy:
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - uses: actions/checkout@v4
      - name: Conftest policy gate (OPA)
        run: conftest test --policy policy/ .

  preflight:
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - uses: actions/checkout@v4
      - name: Preflight quotas (AWS/Azure/GCP)
        run: |
          bash tools/preflight/aws_quota.sh || true
          bash tools/preflight/azure_quota.sh || true
          bash tools/preflight/gcp_quota.sh || true

  supply-chain-verify:
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.7.0
      - name: Verify signed images (keyless, pinned issuer+identity)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          set -e
          for img in mcp-azure mcp-policy-azure mcp-aws mcp-policy-aws mcp-gcp mcp-policy-gcp mcp-oci mcp-policy-oci; do
            cosign verify               --certificate-oidc-issuer="https://token.actions.githubusercontent.com"               --certificate-identity-regexp="^https://github.com/${{ github.repository }}/.+"               ghcr.io/${{ github.repository }}:${img}-latest
          done

  apply:
    runs-on: ubuntu-latest
    needs: [plan, policy, preflight, supply-chain-verify]
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: 1.8.6 }
      - uses: actions/download-artifact@v4
        with: { name: tfplan, path: ${{ inputs.path }} }
      - name: terraform init
        working-directory: ${{ inputs.path }}
        run: terraform init -input=false
      - name: terraform apply (from plan)
        working-directory: ${{ inputs.path }}
        run: terraform apply -input=false -lock-timeout=10m tfplan.bin
