name: apply-azure

on:
  push:
    branches: [ "main" ]
    paths:
      - "products/azure/**"
      - ".github/workflows/apply-azure.yml"

permissions:
  id-token: write
  contents: read

env:
  RG_PLATFORM: rg-aiap-platform
  STATE_STORAGE_ACCOUNT: ${{ secrets.STATE_STORAGE_ACCOUNT }}
  STATE_CONTAINER: ${{ secrets.STATE_CONTAINER }}
  EVIDENCE_CONTAINER: ${{ secrets.EVIDENCE_CONTAINER }}
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  TF_CLI_ARGS: "-no-color"
  TF_WORKDIR: products/azure/example

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect Terraform
        id: detect
        run: |
          if compgen -G "${{ env.TF_WORKDIR }}/*.tf" > /dev/null; then
            echo "has_tf=true" >> $GITHUB_OUTPUT
          else
            echo "has_tf=false" >> $GITHUB_OUTPUT
            echo "No Terraform in ${{ env.TF_WORKDIR }}; skipping."
          fi

      - name: Azure login (Mgmt for backend)
        if: steps.detect.outputs.has_tf == 'true'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.PLATFORM_SUB_ID }}

      - name: Setup Terraform
        if: steps.detect.outputs.has_tf == 'true'
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init (AAD/OIDC backend)
        if: steps.detect.outputs.has_tf == 'true'
        working-directory: ${{ env.TF_WORKDIR }}
        env:
          ARM_USE_OIDC: "true"
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.DEV_SUB_ID }}
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ env.RG_PLATFORM }}" \
            -backend-config="storage_account_name=${{ env.STATE_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ env.STATE_CONTAINER }}" \
            -backend-config="key=${{ github.repository }}-main.tfstate" \
            -backend-config="use_azuread_auth=true"

      - name: Switch context to DEV subscription
        if: steps.detect.outputs.has_tf == 'true'
        run: az account set --subscription "${{ secrets.DEV_SUB_ID }}"

      # Optional: quick safety checks (non-blocking)
      - name: Setup TFLint
        if: steps.detect.outputs.has_tf == 'true'
        uses: terraform-linters/setup-tflint@v4
      - name: TFLint check
        if: steps.detect.outputs.has_tf == 'true'
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          tflint --init
          tflint || true
      - name: Install tfsec
        if: steps.detect.outputs.has_tf == 'true'
        run: curl -sSL https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
      - name: tfsec check
        if: steps.detect.outputs.has_tf == 'true'
        working-directory: ${{ env.TF_WORKDIR }}
        run: tfsec || true

      - name: Terraform apply (auto-approve)
        if: steps.detect.outputs.has_tf == 'true'
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform apply -auto-approve

      # Evidence
      - name: Emit evidence
        if: steps.detect.outputs.has_tf == 'true'
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          ts="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          cat > evidence.json <<JSON
          {
            "run_id": "${{ github.run_id }}",
            "workflow": "apply-azure",
            "repo": "${{ github.repository }}",
            "commit": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "timestamp": "${ts}",
            "subscription_dev": "${{ secrets.DEV_SUB_ID }}",
            "state_storage_account": "${{ env.STATE_STORAGE_ACCOUNT }}",
            "state_container": "${{ env.STATE_CONTAINER }}"
          }
          JSON
          cat evidence.json

      - name: Upload evidence to evidence container (AAD/OIDC)
        if: steps.detect.outputs.has_tf == 'true'
        env:
          SA: ${{ env.STATE_STORAGE_ACCOUNT }}
          CT: ${{ env.EVIDENCE_CONTAINER }}
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          az storage blob upload \
            --auth-mode login \
            --account-name "$SA" \
            --container-name "$CT" \
            --name "runs/${{ github.run_id }}/evidence.json" \
            --file "./evidence.json" \
            --overwrite true

      - name: Upload evidence as artifact
        if: steps.detect.outputs.has_tf == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: evidence-${{ github.run_id }}
          path: ${{ env.TF_WORKDIR }}/evidence.json
