name: _terraform-reusable
on:
  workflow_call:
    inputs:
      tf-globs:
        description: "Glob patterns of Terraform roots to validate (newline-separated)"
        required: true
        type: string

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Install linters
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          echo "installed tflint: $(tflint --version)"
          echo "installed terraform: $(terraform version)"

      - name: Discover TF directories
        id: discover
        shell: bash
        run: |
          echo "patterns<<EOF" >> $GITHUB_OUTPUT
          echo "${{ inputs.tf-globs }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Validate each root
        shell: bash
        run: |
          set -euo pipefail
          IFS=$'\n'
          failures=0
          for pattern in ${{ steps.discover.outputs.patterns }}; do
            echo "::group::Pattern: ${pattern}"
            # find directories that actually contain .tf files
            for dir in $(git ls-files "${pattern}" 2>/dev/null | xargs -r -n1 dirname | sort -u); do
              echo "==> Validating ${dir}"
              if [ ! -d "$dir" ]; then
                echo "skip: $dir is not a directory"
                continue
              fi
              pushd "$dir" >/dev/null
              if ! ls *.tf >/dev/null 2>&1; then
                echo "skip: no .tf in $dir"
                popd >/dev/null
                continue
              fi
              terraform init -backend=false -input=false -no-color
              terraform validate -no-color
              tflint --init
              tflint --no-color
              popd >/dev/null
            done
            echo "::endgroup::"
          done
